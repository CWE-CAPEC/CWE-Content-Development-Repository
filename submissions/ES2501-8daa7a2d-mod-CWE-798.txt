SUBMISSION COMMUNICATION ID: ES2501-8daa7a2d

ACTION TYPE: Modification

SUBMISSION STATUS: Det-Requested

AFFECTED CWES: 

ORIGIN: sub-server

SUBMISSION DATE: 2025-01-28 14:40:26

ISSUES: yes/active

ISSUE DETAILS: SUB.MISC

FIELDCHANGE: DEMOX

PUBTRACKER: #137

MTRACKER: #1221

GITHUBUSER: ctflearner

SUBMISSION TYPE: Unknown

NAME: CWE-798 new PHP demonstrative example

DESCRIPTION:

I want to suggest the below code for  php language  for the given
description:

Demonstrative Examples

PHP code that stores sensitive information like a username and password in
cleartext:

<?php
// Storing credentials in plain text in a PHP file
$db_username = "secretUsername";
$db_password = "secretPassword";
$db_host = "localhost";
$db_name = "exampleDatabase";

// Database connection
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) 
{
    die("Connection failed: " . mysqli_connect_error());
}
echo "Connected successfully";
?>


RELATED WEAKNESSES:

   Other CWE-798

REFERENCES:


DEMONSTRATIVE EXAMPLES:

INTRO TEXT:

This code stores a database password in a PHP file.

BAD CODE:
LANGUAGE: PHP

<?php
$db_username = "secretUsername";
$db_password = "secretPassword";
$db_host = "localhost";
$db_name = "exampleDatabase";

// Database connection
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) 
{
    die("Connection failed: " . mysqli_connect_error());
}
echo "Connected successfully";
?>


EXPLANATORY TEXT:

This code is storing the password in plaintext in the PHP file. An
adversary who can read the source code can obtain the password.

GOOD CODE:
LANGUAGE: PHP

We can store the config.php outside the webroot directory.

<?php
// config.php
return [
    'db_username' => 'secretUsername',
    'db_password' => 'secretPassword',
    'db_host'     => 'localhost',
    'db_name'     => 'exampleDatabase',
];

The main script that connect to its config.php file:

<?php
// Load config
$config = require 'config.php';

// Create connection
$conn = new mysqli(
    $config['db_host'],
    $config['db_username'],
    $config['db_password'],
    $config['db_name']
);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
echo "Connected successfully";
?>



ACTIVE ISSUES:

SUB.MISC - "Miscellaneous/other problem"

Description: The submission has some other problem that is not covered
elsewhere.

Resolution: This will depend on the nature of the problem.

Comments: We have added your suggestion to the "DEMONSTRATIVE
EXAMPLES" section in this form.

 - We wrote some "INTRO TEXT" to describe the behavior that the code
   is attempting to do.  Please let us know if you agree with the
   introduction, or suggest how to change it.

  - We also added "EXPLANATORY TEXT" to the example. Please let us
    know if you agree with the text, or suggest how to change it.

 - The "GOOD CODE" section needs to be filled in order to suggest to
   developers how they could address the weakness. Please provide us
   with example code that modifies the "bad code" in order to fix the
   weakness.

 - Finally, fill the "Response" below to indicate that you have made
   this change, or otherwise ask us for any clarification.

Response:

The description that you comment here seems to be good ! Regarding the
Good Code below is the code that i think it is good as compared to bad
Code. We can store the config.php outside the webroot directory.

<?php
// config.php
return [
    'db_username' => 'secretUsername',
    'db_password' => 'secretPassword',
    'db_host'     => 'localhost',
    'db_name'     => 'exampleDatabase',
];

The main script that connect to its config.php file 

<?php
// Load config
$config = require 'config.php';

// Create connection
$conn = new mysqli(
    $config['db_host'],
    $config['db_username'],
    $config['db_password'],
    $config['db_name']
);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
echo "Connected successfully";
?>

				    

RESOLVED ISSUES:



TIMELINE:

Received: 2025-01-28

Ack-Receipt: 2025-02-03

Init-Review: 2025-02-11

Init-Consultation: YYYY-MM-DD

Init-Declined: YYYY-MM-DD

Init-Accepted: 2025-02-25

Det-Requested: 2025-03-19

Det-Received: YYYY-MM-DD

Det-Review: YYYY-MM-DD

Det-Consultation: YYYY-MM-DD

Det-Accepted: YYYY-MM-DD

Internal-Update: YYYY-MM-DD

CWE-Assigned: YYYY-MM-DD

CWE-Modified: YYYY-MM-DD

Final-Coord: YYYY-MM-DD

CWE-Published: YYYY-MM-DD

Post-Publication: YYYY-MM-DD

Closed: YYYY-MM-DD




COMMUNICATIONS LOG:
2025-02-03 sent email
2025-02-11 sent email
2025-02-25 sent email
2025-03-19 sent email
2025-05-08 sent email
2025-05-10 received comment
