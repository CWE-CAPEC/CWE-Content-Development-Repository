SUBMISSION COMMUNICATION ID: ES2308-6b80112d

ACTION TYPE: New Entry

SUBMISSION STATUS: Init-Declined

AFFECTED CWES: 

ORIGIN: sub-server

SUBMISSION DATE: 2023-08-22 17:09:11

ISSUES: yes/active

ISSUE DETAILS: SUB.UNCLEAR, SUB.OVERLAP, SUB.ABS.LOWLEVEL, SUB.ABS.MULTWEAK, SUB.ATTACK, SUB.COORD, SUB.MISC

PUBTRACKER: #58

MTRACKER: #950

GITHUBUSER: JosephTLucas

SUBMISSION TYPE: Software

NAME: Insufficient Input Validation leading to Indirect Prompt Injection against Generative AI Applications

DESCRIPTION:

Many generative artificial intelligence applications rely on external
sources to augment user prompts. This augmentation can be from plugins or
data stores and is often used to extend functionality and improve accuracy.
However, users with access to add information to these sources can perform
prompt injection attacks, impacting targeted or untargeted third-party
users. This weakness is unique to common "jailbreak" prompt injections in
the attacker's ability to impact other users. Awareness of this weakness is
critical for application developers, as most retrieval augmented generation
methods involve scraping and indexing vast amounts of information with
little regard to how it could be appropriately sanitized.

RELATED WEAKNESSES:

   ChildOf CWE-20

REFERENCES:

Title: Mitigating Stored Prompt Injection Attacks Against LLM Applications
URL: https://developer.nvidia.com/blog/mitigating-stored-prompt-injection-attacks-against-llm-applications/

Title: Proof of Concept
URL: https://github.com/JosephTLucas/stored_prompt_injection

Title: Not what you've signed up for: Compromising Real-World LLM-Integrated Applications with Indirect Prompt Injection
URL: https://arxiv.org/abs/2302.12173


ACTIVE ISSUES:

SUB.OVERLAP - "Duplicate/Overlap"

Description: The submission identifies a weakness, but it is a duplicate of
(or partially overlaps) existing weaknesses, indicating problems with the
submission or associated CWE entries.

Resolution: The submission cannot progress to later phases until (1) the
duplicate/overlap is understood and (2) it is clear how to resolve this
duplicate/overlap.

Comments: This submission overlaps ES2303-fad91ac9 "Prompt
Injection". Both are being declined in favor of a new, more
weakness-focused submission ES2405-84711fc4 (CDR #109), titled
"Insufficient Input Validation in Generative AI Applications". The CWE
Team will work with the AI/ML community and CDR participants to move
that new submission through the process of publication. This
submission, ES2308-6b80112d, would be closed as a duplicate/overlap
with pointers tothe new submission. Both submitters of the original
submissions will receive appropriate credit in any new entry/entries.

Response: [NO REPLY NEEDED]

----------

SUB.UNCLEAR - "Unclear weakness"

Description: The submission's name and/or description does not clearly
identify a weakness, or it is written in a way that is vague and could
cause the submission to be incorrectly mapped to.

Resolution: An initial submission (or full submission) cannot progress past
the consultation phase until SUB.UNCLEAR is addressed.

Comments: This submission emphasizes "input validation," but most
"injection" attacks are due to lack of proper encoding. From CWE-20:
"it is important to emphasize that the distinctions between input
validation and output escaping are often blurred, and developers must
be careful to understand the difference, including how input
validation is not always sufficient to prevent vulnerabilities." As
such, it is not clear whether there is more than one weakness that can
enable prompt injection attacks. CWE uses the term "neutralization"
which covers a variety of protection mechanisms, including input
validation and output encoding, so it might be more appropriate to use
a name and description in this light (see
https://cwe.mitre.org/documents/glossary/index.html#Neutralization).
There might need to be more focus on the weaknesses that enable prompt
injection to occur. In this particular submission, the focus is on
using "external sources to augment user prompts" which might a
separate design-related issue. Please let us know if you agree with
this assessment and, if possible, suggest modifications to the
description that are more weakness-focused.

Response: [NO REPLY NEEDED]


----------

SUB.ATTACK - "Too attack-focused"

Description: The submission's name and/or description emphasizes the
attack, not the weakness. Either the submission's weakness is not
well-understood, or it is better described as an attack pattern, which may
be suitable for inclusion in CAPEC.

Resolution: An initial submission cannot progress to later phases unless it
also includes a clear weakness (i.e., is not subject to SUB.UNCLEAR).

Comments: While "input validation" is mentioned in the name, this
submission seems more focused on the attack of "prompt injection". The
other overlapping submission, ES2303-fad91ac9, frames the weakness as
"concatenating instructions and data, so the underlying engine cannot
distinguish between them" and SUB.UNCLEAR suggests
"neutralization". While understanding the attack of prompt injection
is appropriate, this submission cannot move to the next phase until
the root cause weakness is identified.  Please let us know if you
agree with this assessment and, if possible, suggest modifications to
the description that are more weakness-focused.

Response: [NO REPLY NEEDED]



----------


SUB.ABS.LOWLEVEL - "Low level of abstraction"

Description: The submission identifies an issue, but its abstraction might
be too low-level to merit its own CWE entry. If it is focused on a
particular technology, framework, protocol, or function, then it might not
be unique enough to get its own CWE ID.  This might lead to modification of
an existing entry to include the additional details, or creation of a
higher-level entry for which the submission is one example. (Note: some
older CWE entries have this problem and would not be published today,
generally because they were too specific to a particular language.)

Resolution: The submission will be allowed to progress to later phases once
the more-general concept is appropriately identified and described. The
original, lower-level submission will serve as a primary example of the
more general concept.

Comments: This particular submission focuses on a specific instance of
prompt injection in which the AI application will "rely on external
sources to augment user prompts."  Using external sources seems like a
valid design decision that is not itself being reported as a weakness.
This submission is basically focused on a different "vulnerability
topology" in which the attack can come from an external source, versus
from the attacker directly. In other words, much of the submission
focuses more on the situations in which a potential vulnerability can
occur, not what the root cause weakness is.  Regardless of who
conducts the attack and where they can attack from, the underlying
weakness is the same: not neutralizing external data. A new CWE entry
should focus on the general problem, as is done with XSS (CWE-79) and
the various ways in which XSS can be exploited - see CWE-79's extended
description.  This submission's specific variation - "prompt injection
through external sources" - can be used as part of the external
description, demonstrative examples, and possibly other elements of
the new CWE entry/entries.

Response: [NO REPLY NEEDED]


----------

SUB.ABS.MULTWEAK - "Multiple weaknesses"

Description: The submission describes or suggests multiple independent
weaknesses that each might deserve a separate CWE ID.

Resolution: The submission cannot progress past the consultation phase
until the number of relevant weaknesses is identified. If there are
multiple weaknesses, separate names and descriptions are needed.

Comments: Since "prompt injection" is an attack, and "jailbreak" is a
potential technical impact of an attack depending on where the
vulnerability resides, it is not clear whether there is a single
weakness that enables prompt injection to succeed. Further discussion
is needed to determine if "prompt injection" needs to be split into
multiple weaknesses.  If you can think of multiple weaknesses that
enable prompt injection, please provide them here.

Response: [NO REPLY NEEDED]

----------

SUB.COORD - "Requires extensive coordination"

Description: The submission will require or is currently undergoing close
coordination, discussion, and debate between multiple parties with
different perspectives and opinions.  The communication could be taking
place in CDR itself, or outside of CDR.  As a result, it might take longer
to move the submission to later phases, although the submission is expected
to be more robust and well-defined as a result of this coordination.

Resolution: The submission cannot progress past the Init-Consultation or
Full-Consultation phases until sufficient consensus has been reached, or if
the CWE Team decides to move the submission to the next phase.

Comments: Since prompt injection has active interest on CDR and in the
general community, its resolution will require close
coordination. Please acknowledge this and feel free to ask any
followup questions.

Response: [NO REPLY NEEDED]

----------

SUB.MISC - "Miscellaneous/other problem"

Description: The submission has some other problem that is not covered
elsewhere.

Resolution: This will depend on the nature of the problem.

Comments: As noted elsewhere, this submission overlaps another
submission. CDR has not been used to resolve duplicates in the past,
so there might be some challenges as the CWE Team figures out the best
way to process these duplicates. Please acknowledge this and feel free
to ask any followup questions.

Response: [NO REPLY NEEDED]



RESOLVED ISSUES:



TIMELINE:

Received: 2023-08-22

Ack-Receipt: 2024-01-05

Init-Review: 2024-03-29

Init-Consultation: 2024-04-02

Init-Declined: 2024-05-09

Init-Accepted: YYYY-MM-DD

Full-Sub-Requested: YYYY-MM-DD

Full-Sub-Received: YYYY-MM-DD

Full-Review: YYYY-MM-DD

Full-Consultation: YYYY-MM-DD

Full-Accepted: YYYY-MM-DD

Production: YYYY-MM-DD

Final-Coord: YYYY-MM-DD

CWE-Assigned: YYYY-MM-DD

CWE-Modified: YYYY-MM-DD

CWE-Published: YYYY-MM-DD

Post-Publication: YYYY-MM-DD

Closed: YYYY-MM-DD




COMMUNICATIONS LOG:
2024-01-05 sent email
2024-03-29 sent email
2024-04-02 received email
2024-04-18 post comment
2024-04-30 post comment
2024-05-06 sent email
2024-05-09 sent email
