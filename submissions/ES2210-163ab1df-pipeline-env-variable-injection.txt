SUBMISSION COMMUNICATION ID: ES2210-163ab1df

ACTION TYPE: Modification

SUBMISSION STATUS: Init-Consultation

AFFECTED CWES: 

ORIGIN: sub-server

SUBMISSION DATE: 2022-10-24 14:44:22

ISSUES: yes/active

ISSUE DETAILS: SUB.ACTCHANGE, SUB.MISSDET, SUB.ABS.SUBTREE

PUBTRACKER: #68

MTRACKER: #667

GITHUBUSER: royb-legit

SUBMISSION TYPE: Software

NAME: Improper Neutralization of Pipeline Variables

DESCRIPTION:

A pipeline script that passes variables across an environment uses
pipeline variables but does not neutralize or incorrectly neutralizes
variable delimiters from given pipeline variables.

************************************************************************************************

DEMONSTRATIVE EXAMPLES:

# The entry should have one or more demonstrative examples, but
# submitters should not put significant effort into these until the CWE
# team has reviewed and accepted the general concepts behind the
# submission. Submissions can include example information for either
# Software, Hardware, or both, as relevant.

# "BAD CODE" and "GOOD CODE" can be code snippets, descriptions of a
# design or architecture, or an algorithm or protocol.
#
# * If you would like to submit diagrams/images to support any
# weakness descriptive examples, please attach it to the email
# submission in a png format and reference it by filename where
# desired. For an example, please see:
# https://cwe.mitre.org/data/definitions/1256.html

# See details at:
# https://cwe.mitre.org/community/submissions/guidelines.html#demox

# Values for Language Name: Ada, ARM Assembly, ASP, ASP.NET, Basic, C,
#    C++, C#, COBOL, Fortran, F#, Go, HTML, Java, JavaScript, JSON,
#    JSP, Objective-C, Pascal, Perl, PHP, Pseudocode, Python, Ruby,
#    Rust, Shell, SQL, Swift, VB.NET, Verilog, VHDL, XML, x86
#    Assembly, Other


INTRO TEXT:

<<put the information here>>

BAD CODE:
LANGUAGE: <<LANGUAGE>>

<<put the information here>>


EXPLANATORY TEXT:

<<put the information here>>

GOOD CODE:
LANGUAGE: <<LANGUAGE>>

<<put the information here>>


---------------

INTRO TEXT:

<<put the information here>>

BAD CODE:
LANGUAGE: <<LANGUAGE>>

<<put the information here>>


EXPLANATORY TEXT:

<<put the information here>>

GOOD CODE:
LANGUAGE: <<LANGUAGE>>

<<put the information here>>



************************************************************************************************

OBSERVED EXAMPLES:

# Where known, the submission should identify multiple
# publicly-reported vulnerabilities in real-world products that
# exhibit the weakness. If possible, include CVE Identifier, its
# corresponding weblink, and a short summary. If a CVE ID is
# unavailable, use the Link to point to the reference that explains
# the vulnerability.

# The ID should be the CVE Identifier, if available. If not available,
# then supply a title or alternate ID used by the reference.

# The Link should be the URL to the reference that explains the
# weakness that leads to the vulnerability.

# The ObexSummary should be a brief sentence or two that focuses solely on
# the weakness in the affected product.

# See details at:
# https://cwe.mitre.org/community/submissions/guidelines.html#obex

ID: <<CVE1>>

Link: <<LINK1>>

ObexSummary: <<SUM1>>


ID: <<CVE2>>

Link: <<LINK2>>

ObexSummary: <<SUM2>>


ID: <<CVE3>>

Link: <<LINK3>>

ObexSummary: <<SUM3>>


ID: <<CVE4>>

Link: <<LINK4>>

ObexSummary: <<SUM4>>



************************************************************************************************

POTENTIAL MITIGATIONS:

# This element should cover one or more techniques that will eliminate
# and/or reduce the frequency or impact of the weakness. Each mitigation
# must include a Phase and Description, while the Effectiveness element
# is optional. A descriptive Effectiveness Note is also optional.

# See details at:
# https://cwe.mitre.org/community/submissions/guidelines.html#mitigations


# Values for Phase: Policy, Requirements, Architecture and Design,
#    Implementation, Build and Compilation, Testing, Documentation,,
#    Bundling, Distribution, Installation, System Configuration,
#    Operation,, Patching and Maintenance, Porting, Integration,
#    Manufacturing, Decommissioning and End-of-Life

# Values for Effectiveness: High, Moderate, Limited, Incidental,
#    Discouraged Common Practice, Defense in Depth, None


Phase: <<PHASE1>>

Description: <<put the information here>>

Effectiveness: <<EFFECT1>>

Effectiveness Notes: <<put the information here>>


Phase: <<PHASE2>>

Description: <<put the information here>>

Effectiveness: <<EFFECT2>>

Effectiveness Notes: <<put the information here>>


Phase: <<PHASE3>>

Description: <<put the information here>>

Effectiveness: <<EFFECT3>>

Effectiveness Notes: <<put the information here>>



RELATED WEAKNESSES:

   ChildOf CWE-74
   Other CWE-138

REFERENCES:

Title: Google & Apache Found Vulnerable to GitHub Environment Injection
URL: https://www.legitsecurity.com/blog/github-privilege-escalation-vulnerability-0




ACTIVE ISSUES:

SUB.ACTCHANGE - "Change in action for submission"

Description: The submission's action needs to change, e.g., from "New
Entry" to "Modification," or vice versa. This potentially requires changes
to the kinds of information that will need to be provided.

Resolution: The submission cannot progress to the Production stage until
the informational needs are addressed.

Comments: Per 2023-01-12/2023-01-29 email threads, it is agreed to
treat this submission as a modification to the higher-level CWE-74
(Injection). Environment variables will be mentioned as a type of
input; the extended description might be modified or updated;
mitigations specific to CI/CD will be considered; and potential
examples will be explored, such as observed examples or demonstrative
examples.

Response: <SUBMITTER SHOULD REPLY HERE>

-----------

SUB.MISSDET - "Missing details"

Description: The submission is missing some requested or required details
for fields other than name and description.

Resolution: The submission cannot progress to later phases if it does not
have all required fields.

Comments: Because of the change to a Modification action, this
submission now requests information on Potential Mitigations that
might be specific to pipelines; observed examples, if any could be
found; and demonstrative examples. Please fill out those sections,
which are provided above. The CWE Team will examine whether to modify
existing descriptions, e.g., by mentioning environment variables as a
type of input.

Response: <SUBMITTER SHOULD REPLY HERE>


-----------

SUB.ABS.SUBTREE - "Potential subtree issue/gap"

Description: The submission might identify an issue for which there could
be a broader gap or organizational challenge that requires analysis of CWE
subtree relationships under Research View 1000, in ways that extend beyond
creation of a parent at the next-highest level of abstraction.

Resolution: The submission cannot progress past the consultation phase
(whether initial or full) unless it is at an acceptable level of
abstraction, and the subtree issue(s) can be resolved or addressed
independently.

Comments: There remains a deeper issue with how neutralization is
handled within CWE, since organization varies around different
"dimensions" (or facets) within multiple parts of CWE. The 2022-11-02
response clarifies that "Environment variables [are] one of the ways
that build services vendors choose to implement pipeline
variable. Hence, I think that we shouldn’t change it to environment
variables."  Under CWE-138, entries are hierarchically organized
around "type of special element" that is not neutralized, including
CWE-140: Improper Neutralization of Delimiters. CWE-138 can apply to
multiple kinds of behaviors, not "just" injection (CWE-74). However,
CWE-74 is in a different part of CWE's tree, where organization is
around "type of data/command" that is affected when delimiters are not
neutralized. The initial submission overlaps both areas, and variables
- pipeline or otherwise - are more of a "type of input."  The
requester notes that CWE-1236 (CSV injection) may be a similar use
case.  This larger subtree problem will require extensive effort for
the CWE team to research and resolve. That research will be conducted
independently, so this submission will be treated as a modification to
CWE-74.

Response: <SUBMITTER SHOULD REPLY HERE>



RESOLVED ISSUES:


SUB.RELS - "Unclear relationships"

Description: Submission suggests some relationships, but the
name/description is not explained in a way in which the relationship
is relevant, or the weakness is apparent, but it is not clear what the
best parent/child relationship(s) would be.

Resolution: the submission cannot progress to the next phase if
SUB.UNCLEAR is present. Submission can progress to other phases if the
CWE Team agrees that the potential relationships may require closer
investigation.  The submission cannot progress to the publication
stage until clear relationships and direct parents are identified. The
CWE Team may decide to use high-level relationships (e.g., to Pillars)
if deeper problems such as SUB.ABS.SUBTREE exist and cannot be quickly
resolved.

Comments: This is not directly related to CWE-88 as suggested, since
CWE-88 is about not neutralizing the switches/arguments for a command
that is being constructed. However, its relationship to CWE-93 is
pretty clear.

Response: [RESOLVED ISSUE; DO NOT CHANGE] I suggest the following fix:
Change the suggested submission to be a ChildOf CWE-74

------

SUB.ATTACK - "Too attack-focused"

Description: Submission's name and/or description emphasizes the
attack, not the weakness. Either the submission's weakness is not
well-understood, or it is better described as an attack pattern, which
may be suitable for inclusion in CAPEC.

Resolution: an initial submission cannot progress to later phases
unless it also includes a clear weakness (i.e., is not subject to
SUB.UNCLEAR).

Comments: [RESOLVED ISSUE; DO NOT CHANGE] The new name and desc no
longer emphasize the attack.

------

SUB.UNCLEAR - "Unclear weakness"

Description: Submission's name and/or description does not clearly
identify a weakness, or it is written in a way that is vague and could
cause the submission to be incorrectly mapped to.

Resolution: an initial submission (or full submission) cannot progress
past the consultation phase until SUB.UNCLEAR is addressed.

Comments: The new name "Improper Neutralization of Pipeline Variables"
is much better, although delimiters need to be neutralized - not
variables. Consider: "Improper Neutralization of Delimiters in
Pipeline Variables". Note - this name might need to be generalized
further to "Environment Variables" depending on other analysis for the
appropriate level of abstraction.

Response: [RESOLVED ISSUE; DO NOT CHANGE] Your suggestion for the new
name: “Improper Neutralization of Delimiters in Pipeline Variables”
sounds great. I request to rename the submission. Please see my other
comments regarding generalizing this issue to environment variables.

SUB.ABS.LOWLEVEL - "Low level of abstraction"

Description: Submission identifies an issue, but its abstraction might
be too low-level to merit its own CWE entry. If it is focused on a
particular technology, framework, protocol, or function, then it might
not be unique enough to get its own CWE ID.  This might lead to
modification of an existing entry to include the additional details,
or creation of a higher-level entry for which the submission is one
example. (Note: some older CWE entries have this problem and would not
be published today, generally because they were too specific to a
particular language.)

Resolution: the submission will be allowed to progress to later phases
once the more-general concept is appropriately identified and
described. The original, lower-level submission will serve as a
primary example of the more general concept.

Comments: This submission originally seemed to focus on environment
variables as a type of input. Accordingly, CWE-138 seems to be the
most relevant parent (although CWE-74 may still be important
previously). It seems that "pipeline variables" might be an
appropriate Variant to use under CWE-138, although there remains a
question about what other kinds of "variables" might need to be
covered that are specific to other kinds of technologies.  Further
investigation/discussion will be necessary as we deal with other
issues such as SUB.ABS.SUBTREE. If we merge into an existing CWE, an
extended description could include information specific to pipeline
variable manipulation (as well as mentioning other types of
variables). Other changes could be made to affected technologies to
reflect CI/CD, and a new demonstrative example could be provided.

Response: [RESOLVED ISSUE; DO NOT CHANGE] As mentioned in other
comments, CWE-1236 is a similar weakness. It is an injection weakness
that is related to a specific kind of platform. We can see CICD as a
platform like CSV formulas.  If you still see this issue more suitable
to be a modification of an existing issue, we can proceed in modifying
an existing CWE


SUB.ACTION - "Unable to determine action"

Description: It is not clear what action to perform based on the
submission, e.g., create new entry, update existing entry, etc.

Resolution: The submission cannot progress to the Production stage until
the relevant actions(s) are identified.

Comments: Even after the 2002-11-02 response, it's not yet clear how
to handle the relationships until SUB.ABS.LOWLEVEL and SUB.ABS.SUBTREE
are addressed, which might require some focused research and
(potentially) discussion with the broader CWE community. Related
subtree research will be deferred as a separate task outside of this
submission, which will be changed to a "Modification."

Response: <SUBMITTER SHOULD REPLY HERE>

-------


TIMELINE:

Received: 2022-10-24

Ack-Receipt: 2022-10-24

Init-Review: 2022-10-31

Init-Consultation: 2022-10-31

Init-Declined: YYYY-MM-DD

Init-Accepted: YYYY-MM-DD

Det-Requested: YYYY-MM-DD

Det-Received: YYYY-MM-DD

Det-Review: YYYY-MM-DD

Det-Consultation: YYYY-MM-DD

Det-Accepted: YYYY-MM-DD

Production: YYYY-MM-DD

Final-Coord: YYYY-MM-DD

CWE-Assigned: YYYY-MM-DD

CWE-Modified: YYYY-MM-DD

CWE-Published: YYYY-MM-DD

Post-Publication: YYYY-MM-DD

Closed: YYYY-MM-DD


COMMUNICATIONS LOG:
2022-10-24 sent email
2022-10-31 sent email
2022-11-02 received email
2022-11-09 received email
2022-11-16 sent email
2022-11-22 sent email
2022-11-24 received email
2022-12-04 received email
2022-12-06 sent email
2022-12-06 sent email
2022-12-07 received email
2023-01-10 received message
2023-01-12 sent email
2023-01-29 sent email
2023-01-31 received email
2023-03-06 received email
2023-03-09 sent email
2023-03-10 sent email
2024-01-03 sent email
2024-01-03 received email
