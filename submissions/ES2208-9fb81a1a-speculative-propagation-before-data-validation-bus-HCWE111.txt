SUBMISSION COMMUNICATION ID: ES2208-9fb81a1a

ALTERNATE ID: HCWE111

ACTION TYPE: New Entry

AFFECTED CWES:

SUBMISSION STATUS: Init-Consultation

ORIGIN: sub-server

SUBMISSION DATE: 2022-08-25 15:18:55

ISSUES: yes/active

ISSUE DETAILS: SUB.UNCLEAR, SUB.ABS.LOWLEVEL, SUB.RELS

PUBTRACKER: #13

MTRACKER: #632

GITHUBUSER: frestucc

SUBMISSION TYPE: Hardware

NAME: Improper Request Propagation before Data Reception in Write Transactions in a Bus Architecture

DESCRIPTION:

The product uses a multi-manager shared bus architecture with an
on-chip interconnect that speculatively propagates a request for a
write transaction, but it does not ensure that the remainder of the
request is fulfilled quickly.


(ADDITIONAL DESCRIPTION FOLLOWS; this needs to be corrected and
refined in later phases after completion of the Initial-Consultation
phase.)

Some products may use an architecture with a shared bus that is
accessible by multiple devices, in which these devices can issue
requests that utilize the shared bus. There may be an on-chip
interconnect based on a protocol that manages the devices' requests to
the bus and enforces the ordering of requests and data. When a device
makes a request, the bus might indefinitely lock the write access to a
shared output link until the initiating device finishes its
transaction. If the initiating device does not finish the transaction
quickly enough, this can prevent other devices from using the bus,
causing a denial of service.

The scenario may play out as follows. The interconnect receives a
write request from a controller initiator (e.g., sending the header to
the interconnect for writing N words of data, with N ranging from 1 to
the maximum burst length allowed). The interconnect then speculatively
propagates the request to the target peripheral through the shared bus
before the corresponding data are received at the interconnect.  This
speculatively reserves the bus to the manager transaction issuer,
which is left free to delay its data provisioning phase.    This reserves
the whole bus path between the initiator and the target peripheral
until all of the words associated with the request are provided by the
controller.

Here, the word "speculatively" refers to the fact that the
interconnect propagates the request assuming that the controller will
at some point provide the data, thus releasing the use of the bus. The
interconnect assumes a cooperative behavior from the controller, thus
implicitly trusting that the controller will complete the transaction
and release the bus for the use from the other controllers.

A malicious, faulty, or misbehaving manager module can generate a
denial-of-service condition in preventing access to the write data
link from all of the other managers in the system, and unboundedly
inhibit the write access to one or multiple peripherals in the system
(i.e., memories, I/Os, etc.).

A full description and investigation of the issue for one of the most
popular standards for on-chip communication deployed in modern systems on a
chip is reported in [REF-XXX] and [REF-YYY].


RELATED WEAKNESSES:

ChildOf CWE-841

Other CWE-691


REFERENCES:

Title: [REF-XXX] Cut and Forward: Safe and Secure Communication for FPGA System on Chips
URL: https://ieeexplore.ieee.org/document/9852740

Title: [REF-YYY] Safely Preventing Unbounded Delays During Bus Transactions in FPGA-based SoC
URL: https://ieeexplore.ieee.org/abstract/document/9114758



ACTIVE ISSUES:
----------

SUB.UNCLEAR - "Unclear weakness"

Description: The submission's name and/or description does not clearly
identify a weakness, or it is written in a way that is vague and could
cause the submission to be incorrectly mapped to.

Resolution: An initial submission (or full submission) cannot progress past
the consultation phase until SUB.UNCLEAR is addressed.

Comments: We plan to address the submitter's 2024-06-26 CDR reply as follows:

(1) For the time being, we have adapted the submitter's name
suggestion and changed this submission's name to: "Improper Request
Propagation before Data Reception in Write Transactions in a Bus
Architecture". This could be improved later in Stage 2 (Detailed
Submission), which is expected to begin shortly after this round of
consultation.  We also propose the following short description, also
subject to change: "The product uses a multi-manager shared bus
architecture with an on-chip interconnect that speculatively
propagates a request for a write transaction, but it does not ensure
that the remainder of the request is fulfilled quickly." Finally, we
have integrated many of your responses into the description, labeled
as "ADDITIONAL DESCRIPTION".

(2) Thank you for clarifying what is meant by "manager module" and the
"controller module" term, namely: "a hardware module capable of
initiating transactions on the bus through its manager
interface. Examples of manager modules are processors, DMAs, hardware
accelerators, etc." In the more-detailed Stage 2, we will work with
you to determine the most appropriate term to use and provide a clear
definition for the term within the new entry where appropriate.

(3) Thank you for clarifying how you are using the term
"speculative". This does not appear to be commonly used with respect
to bus architectures, although it seems to be applicable in network
switching. We will work with you in Stage 2 to determine whether to
use the "speculative" term.  If so, we will need to account for
potential confusion with "speculative execution" as used with issues
like SPECTRE/MELTDOWN.

(4) Thank you for your feedback on our understanding of the issue. We
took our bulleted points and turned them into an explanatory
paragraph, and we used other information in your response to extend
the description; see "ADDITIONAL DESCRIPTION" in the submission.

The 2024-06-26 CDR comment also said: "I wish to add that the core
issue relies on a combination of two factors: (i) lack of
specification in the on-chip communication standard (AXI in the case
under analysis), and (ii) the cut-through switching policy, a
switching methodology for high performance commonly implemented at the
interconnect level. In cut-through, a request is propagated
independently on the receipt at the interconnect level of the
corresponding data. As mentioned in the previous comment, if the
controller issuing a write request delays the provisioning of the
corresponding data, the other controllers experience delays in
accessing the bus. Such delays are capable of generating denial of
service." For this submission, we will focus primarily on the
mishandling of speculative behavior as covered in item (ii). For item
(i), the "lack of specification" is a common weakness that is likely
covered by CWE-1059: Insufficient Technical Documentation. Please let
us know if you agree with this approach.

Response: (1) Regarding the proposed short description, I would
suggest modifying the phrase: "that the remainder of the request is
fulfilled quickly" into "that the remaining steps required by the
manager to complete the request are fulfilled in a timely manner".
This just to better conveys that additional steps are necessary from
the manager to complete its part of the write transaction and that if
these steps are not completed in a timely manner a denial of service
(DoS) condition for other managers arise. Please let me know if you
agree with this formulation.

(2) I agree.

(3) I agree.

(4) I agree.

Regarding the additional comment on CWE-1059: Insufficient Technical
Documentation, I largely agree with your approach. However, I would
like to highlight a subtle distinction: as I understand it, CWE-1059
primarily addresses cases where documentation is incomplete or
missing. In contrast, the issue in (i) pertains to a specification
that is, either intentionally or unintentionally, underspecified. If
you believe this falls under the category covered by CWE-1059, then I
agree with your determination.

----------

SUB.RELS - "Unclear relationships"

Description: The submission suggests some relationships, but the
name/description is not explained in a way in which the relationship is
relevant; or, the weakness is apparent, but it is not clear what the best
parent/child relationship(s) would be.

Resolution: The submission cannot progress to the next phase if SUB.UNCLEAR
is present. It can progress to other phases if the CWE Team agrees that the
potential relationships may require closer investigation.  The submission
cannot progress to the publication stage until clear relationships and
direct parents are identified. The CWE Team may decide to use high-level
relationships (e.g., to Pillars) if deeper problems such as SUB.ABS.SUBTREE
exist and cannot be quickly resolved.

Comments: Based on 2024-06-26 CDR comment, we now agree that CWE-772
is inappropriate because it "has a different peculiarity as in that
case there is an explicit release required by the initiator. Instead,
in this specific case, no explicit release is required from the
initiator, rather, the release is implicit after the propagation of
the data corresponding to the request."  Since the core weakness is
about not handling delays in expected behavior, this is currently
being treated as an example CWE-841: Improper Enforcement of
Behavioral Workflow, whose extended description covers a case in which
"Steps are [expected to be] performed in a timely fashion." We will
update CWE-841's description so that it is more clearly consistent
with this submission, and we will make this submission a child of
CWE-841.  Let us know if you agree with this approach.

Response: I agree.

----------

SUB.ABS.LOWLEVEL - "Low level of abstraction"

Description: The submission identifies a weakness, but it is a duplicate of
(or partially overlaps) existing weaknesses, indicating problems with the
submission or associated CWE entries.

Description: The submission identifies an issue, but its abstraction might
be too low-level to merit its own CWE entry. If it is focused on a
particular technology, framework, protocol, or function, then it might not
be unique enough to get its own CWE ID.  This might lead to modification of
an existing entry to include the additional details, or creation of a
higher-level entry for which the submission is one example. (Note: some
older CWE entries have this problem and would not be published today,
generally because they were too specific to a particular language.)

Resolution: The submission will be allowed to progress to later phases once
the more-general concept is appropriately identified and described. The
original, lower-level submission will serve as a primary example of the
more general concept.

Comments: The submitter said "the weakness is associated with general
concepts such as cut-through switching and multi-channel bus protocols
rather than only with the specific standard under analysis in the
references." We agree with the general concept and will separately
work to create a more general CWE (and/or update CWE-841: Improper
Enforcement of Behavioral Workflow as needed). This submission's level
of abstraction does not need to be changed, and it can remain
applicable to bus architectures. Please let us know if you agree with
this comment.

Response: I agree.


----------
TIMELINE:

Received: 2022-08-25

Ack-Receipt: 2022-08-29

Init-Review: 2022-09-12

Init-Consultation: 2024-06-25

Init-Declined: YYYY-MM-DD

Init-Accepted: YYYY-MM-DD

Det-Requested: YYYY-MM-DD

Det-Received: YYYY-MM-DD

Det-Review: YYYY-MM-DD

Det-Consultation: YYYY-MM-DD

Det-Accepted: YYYY-MM-DD

Internal-Update: YYYY-MM-DD

Final-Coord: YYYY-MM-DD

CWE-Assigned: YYYY-MM-DD

CWE-Modified: YYYY-MM-DD

CWE-Published: YYYY-MM-DD

Post-Publication: YYYY-MM-DD

Closed: YYYY-MM-DD


COMMUNICATIONS LOG:
2022-08-29 sent email
2022-09-12 action review
2023-09-12 publish server
2024-06-25 sent email
2024-06-26 received reply
2025-03-06 sent email
2025-03-07 received comment
