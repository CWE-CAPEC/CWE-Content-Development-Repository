SUBMISSION COMMUNICATION ID: ES2502-c889f75d

ACTION TYPE: Modification

SUBMISSION STATUS: Det-Received

AFFECTED CWES: CWE-918

ORIGIN: sub-server

SUBMISSION DATE: 2025-02-08 04:46:23

ISSUES: yes/active

ISSUE DETAILS: SUB.MISC

FIELDCHANGE: DEMOX

PUBTRACKER: #138

MTRACKER: #1222

GITHUBUSER: ctflearner

SUBMISSION TYPE: Unknown

NAME: CWE-918 new demonstrative example

DESCRIPTION:

I want to suggest the below code for php language for the given
description.


The given PHP code is vulnerable to Server-Side Request Forgery (SSRF)
because it directly accepts a user-supplied URL from the $_GET['url']
parameter and fetches its content using file_get_contents(), without any
validation or restrictions. This allows an attacker to request internal or
restricted resources within the server's network, such as internal
admin panels, cloud metadata endpoints, or local services running on
localhost.

Demonstrative Examples

<?php
$url = $_GET['url']; // User-controlled input

// Fetch the content of the provided URL
$response = file_get_contents($url);

echo $response;
?>


RELATED WEAKNESSES:

   Other CWE-918

REFERENCES:


DEMONSTRATIVE EXAMPLES:

INTRO TEXT:

[SUBMITTER: PLEASE REVIEW] This code intends to receive a URL from a
user, access the URL, and return the results to the user.

BAD CODE:
LANGUAGE: PHP

<?php
$url = $_GET['url']; // User-controlled input

// Fetch the content of the provided URL
$response = file_get_contents($url);

echo $response;
?>


EXPLANATORY TEXT:

The given PHP code is vulnerable to Server-Side Request Forgery (SSRF)
because it directly accepts a user-supplied URL from the $_GET['url']
parameter and fetches its content using file_get_contents(), without any
validation or restrictions. This allows an attacker to request internal or
restricted resources within the server's network, such as internal
admin panels, cloud metadata endpoints, or local services running on
localhost.


GOOD CODE:
LANGUAGE: PHP

<?php
// Define allowed URLs (or domains)
$allowed_urls = [
    'https://example.com/data.json',
    'https://api.example.com/info',
];

// Get the user-provided URL
$url = $_GET['url'] ?? '';

// Validate against allowed URLs
if (!in_array($url, $allowed_urls)) 
{
    http_response_code(400);
    echo "Invalid or unauthorized URL.";
    exit;
}

// Fetch content safely
$response = @file_get_contents($url);
if ($response === false) 
{
    http_response_code(500);
    echo "Failed to fetch content.";
    exit;
}

echo htmlspecialchars($response); // Escape output for safety
?>



ACTIVE ISSUES:

SUB.MISC - "Miscellaneous/other problem"

Description: The submission has some other problem that is not covered
elsewhere.

Resolution: This will depend on the nature of the problem.

Comments: We have added your suggestion to the "DEMONSTRATIVE
EXAMPLES" section in this form.

 - We wrote some "INTRO TEXT" to describe the behavior that the code
   is attempting to do.  Please let us know if you agree with the
   introduction.

 - The "GOOD CODE" section needs to be filled in order to suggest to
   developers how they could address the weakness. Please provide us
   with example code that modifies the "bad code" in order to fix the
   weakness.

 - Finally, fill the "Response" below to indicate that you have made
   this change, or otherwise ask us for any clarification.

Response: [Submitter provided a "good code" example; the DEMONSTRATIVE
EXAMPLE field was updated with the good code.]



RESOLVED ISSUES:



TIMELINE:

Received: 2025-02-08

Ack-Receipt: 2025-02-13

Init-Review: 2025-02-18

Init-Consultation: YYYY-MM-DD

Init-Declined: YYYY-MM-DD

Init-Accepted: 2025-02-25

Det-Requested: 2025-03-18

Det-Received: 2025-05-10

Det-Review: YYYY-MM-DD

Det-Consultation: YYYY-MM-DD

Det-Accepted: YYYY-MM-DD

Internal-Update: YYYY-MM-DD

CWE-Assigned: YYYY-MM-DD

CWE-Modified: YYYY-MM-DD

Final-Coord: YYYY-MM-DD

CWE-Published: YYYY-MM-DD

Post-Publication: YYYY-MM-DD

Closed: YYYY-MM-DD




COMMUNICATIONS LOG:
2025-02-13 sent email
2025-02-18 sent email
2025-02-25 sent email
2025-03-19 sent email
2025-05-08 sent email
2025-05-10 received comment
2025-05-13 action update
2025-06-13 sent email
