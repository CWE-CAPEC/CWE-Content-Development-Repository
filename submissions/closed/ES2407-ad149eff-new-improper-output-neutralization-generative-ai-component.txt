SUBMISSION COMMUNICATION ID: ES2407-ad149eff

ACTION TYPE: New Entry

SUBMISSION STATUS: Closed

AFFECTED CWES: CWE-1426

ORIGIN: sub-server

SUBMISSION DATE: 2024-07-02 19:02:41

ISSUES: yes/active

ISSUE DETAILS: 

PUBTRACKER: #115

MTRACKER: #1104

GITHUBUSER: stevechristeycoley

SUBMISSION TYPE: Software

NAME: Improper Validation of Generative AI Output

DESCRIPTION:

The product invokes a generative AI/ML component whose behaviors and outputs
cannot be directly controlled, but the product does not sufficiently
validate the outputs to ensure that they align with the intended
security, content, or privacy policy.



MODES OF INTRODUCTION:

Phase: Architecture and Design; Implementation

Note: Developers may rely heavily on protection mechanisms such as
input filtering and model alignment, assuming they are more effective
than they actually are.



APPLICABLE PLATFORMS:


Language Class: Not Language-Specific

Operating System Class: Not OS-Specific

Architecture Class: Not Architecture-Specific

Technology Name: AI/ML

Technology Class: Not Technology-Specific



COMMON CONSEQUENCES:

Scope: Integrity

Impact: Execute Unauthorized Code or Commands; Varies by Context

Note: In an agent-oriented setting, output could be used to cause
unpredictable agent invocation, i.e., to control or influence agents
that might be invoked from the output.  The impact varies depending on
the access that is granted to the tools, such as creating a database
or writing files.



POTENTIAL MITIGATIONS:

Phase: Architecture and Design

Description: Place the generative AI component (such as an LLM) in an
untrusted or non-privileged space.



Phase: Operation

Description: Use "semantic comparators," which are mechanisms that
provide semantic comparison to identify objects that might appear
different but are semantically similar.


Phase: Operations

Description: Use components that operate externally to the system to
monitor the output and act as a moderator. These components are called
different terms, such as supervisors or guardrails.


Phase: Build and Compilation

Description: During model training, use an appropriate variety of good
and bad examples to guide preferred outputs.



DETECTION METHODS:

Method: Dynamic Analysis with Manual Results Interpretation; Dynamic Analysis with Automated Results Interpretation

Notes: Use known techniques for prompt injection and other attacks,
and adjust the attacks to be more specific to the model or system.


Method: Architecture or Design Review

Notes: This can be effective, but works best in conjunction with
dynamic analysis.



RELATED WEAKNESSES:

RelType: ChildOf
ID: CWE-707
View-ID: 1000


RelType: MemberOf
ID: CWE-1409
View-ID: 1400


REFERENCES:

Title: LLM02: Insecure Output Handling

URL: https://genai.owasp.org/llmrisk/llm02-insecure-output-handling/

Author: OWASP

Date: 2024-03-21


Title: Validating Outputs

URL: https://cohere.com/blog/validating-llm-outputs

Author: Cohere, Guardrails AI

Date: 2023-09-13


Title: NeMo Guardrails: A Toolkit for Controllable and Safe LLM Applications with Programmable Rails

URL: https://aclanthology.org/2023.emnlp-demo.40/

Author: Traian Rebedea, Razvan Dinu, Makesh Sreedhar, Christopher Parisien, Jonathan Cohen (NVIDIA)

Date: December 2023


Title: Insecure output handling in LLMs

URL: https://learn.snyk.io/lesson/insecure-input-handling/

Author: Snyk

Date: NO DATE


Title: Building Guardrails for Large Language Models

URL: https://arxiv.org/pdf/2402.01822

Author: Yi Dong, Ronghui Mu, Gaojie Jin, Yi Qi, Jinwei Hu, Xingyu Zhao, Jie Meng,  Wenjie Ruan, Xiaowei Huang

Date: 2024-05-29


OBSERVED EXAMPLES:

ID: CVE-2024-3402

Link: 

ObexSummary: Chain - GUI for ChatGPT API performs input validation but
does not properly "sanitize" or validate model output data, leading to
XSS (CWE-79)



ACTIVE ISSUES:


RESOLVED ISSUES:

SUB.ABS.SUBTREE - "Potential subtree issue/gap"

Description: The submission might identify an issue for which there could
be a broader gap or organizational challenge that requires analysis of CWE
subtree relationships under Research View 1000, in ways that extend beyond
creation of a parent at the next-highest level of abstraction.

Resolution: The submission cannot progress past the consultation phase
(whether initial or detailed) unless it is at an acceptable level of
abstraction, and the subtree issue(s) can be resolved or addressed
independently.

Comments: The focus on neutralization causes some overlap with CWE-74
(involving neutralization and downstream components) and CWE-20 (with
its focus on validation of input alone). This submission will be
changed to focus only on validation.

Response: Changed name and desc for focus solely on "validation".


SUB.COORD - "Requires extensive coordination"

Description: The submission will require or is currently undergoing close
coordination, discussion, and debate between multiple parties with
different perspectives and opinions.  The communication could be taking
place in CDR itself, or outside of CDR.  As a result, it might take longer
to move the submission to later phases, although the submission is expected
to be more robust and well-defined as a result of this coordination.

Resolution: The submission cannot progress past the Init-Consultation or
Det-Consultation phases until sufficient consensus has been reached, or if
the CWE Team decides to move the submission to the next phase.

Comments: This submission is being actively developed by the CWE AI WG
during July 2024 in the attempt to add it to CWE 4.15 (July 16),
including meetings and possibly discussions on CDR.

Response: <SUBMITTER SHOULD REPLY HERE>


SUB.NEWTECH - "New/Emerging Technology"

Description: The submission is related to a new or emerging technology that
is not well-understood from a weakness perspective, which can cause real or
perceived gaps in CWE that require extra effort and time to analyze.
Typically, for new/emerging technologies, early vulnerability discovery and
research does not focus on root cause analysis (i.e., weakness
identification). Instead, the focus is on other areas such as attacks and
exploitation methods, technical impacts, threats, mitigations, or other
concerns.  As a result, industry understanding can be limited, effectively
requiring research or focused efforts by SMEs to understand the underlying
weaknesses.  Rapidly-changing, diverse terminology and technology can
further complicate understanding. Finally, there might not be enough
real-world examples with sufficient details from which weakness patterns
may be discovered.  For this reason, it can be difficult to determine
whether CWE entries already cover the topics of concern, and which gaps (if
any) exist.  As of May 2024, some new or emerging technologies include
AI/ML, cryptocurrency/blockchain, post-quantum cryptography, and
large-scale architectures with many components that have different trust
boundaries.  In previous years, new/emerging domains for CWE included
hardware, cloud, and ICS/OT.

Resolution: The submission cannot progress past the Init-Consultation or
Det-Consultation phases until sufficient attempts have been made to
understand the weaknesses commonly seen in new or emerging technologies, or
if the CWE Team decides to move the submission to the next phase.  Analysis
could include analyzing well-known attacks to understand the weaknesses
that enable the attacks to succeed; analysis of mitigations to understand
how the underlying weaknesses are perceived; and/or other methods.  Such
analysis might require consultation with a variety of Subject Matter
Experts (SMEs).

Comments: This submission is related to AI/ML, which is not well
understood from a weakness perspective.

Response: <SUBMITTER SHOULD REPLY HERE>


SUB.MISC - "Miscellaneous/other problem"

Description: The submission has some other problem that is not covered
elsewhere.

Resolution: This will depend on the nature of the problem.

Comments: On Friday, June 28, 2024, the WG decided that even if a
new-entry submission did not meet CWE's full quality/comprehensiveness
requirements, that it would be beneficial to the community to ensure
its inclusion in CWE 4.15 (July 16) and improve it in subsequent
releases. This potential problem is mentioned in this submission for
transparency.

Response: <SUBMITTER SHOULD REPLY HERE>




TIMELINE:

Received: 2024-07-02

Ack-Receipt: 2024-07-02

Init-Review: 2024-07-02

Init-Consultation: 2024-07-03

Init-Declined: YYYY-MM-DD

Init-Accepted: 2024-07-03

Det-Requested: 2024-07-03

Det-Received: 2024-07-03

Det-Review: YYYY-MM-DD

Det-Consultation: YYYY-MM-DD

Det-Accepted: 2024-07-10

Internal-Update: 2024-07-10

CWE-Assigned: 2024-07-11

CWE-Modified: YYYY-MM-DD

Final-Coord: 2024-07-12

CWE-Published: 2024-07-16

Post-Publication: YYYY-MM-DD

Closed: 2024-08-08




COMMUNICATIONS LOG:
2024-07-02 sent email
2024-07-03 sent email
2024-07-03 action update
2024-07-10 sent email
2024-07-09 sent email
2024-07-10 received email
2024-07-12 action review
