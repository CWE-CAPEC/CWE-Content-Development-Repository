SUBMISSION COMMUNICATION ID: ES2507-35bd5bc8

ACTION TYPE: New Entry

SUBMISSION STATUS: Init-Consultation

AFFECTED CWES: 

ORIGIN: sub-server

SUBMISSION DATE: 2025-07-18 08:18:16

ISSUES: yes/active

ISSUE DETAILS: SUB.OVERLAP, SUB.ABS.SUBTREE, SUB.RELREFS, SUB.RELS

PUBTRACKER: #160

MTRACKER: #1274

GITHUBUSER: meetinthemiddle-be

SUBMISSION TYPE: Software

NAME: Lack of notification upon malicious e-mail address / phone number change

DESCRIPTION:

An attacker who has compromised a user's authenticated session can
permanently deny the victim access to the information in their account. Due
to the e-mail and/or phone number change process not notifying the victim,
they are then also not triggered to report the apparent breach to the
system owner. To the end user, next time they attempt to log in, it seems
as if their account does not exist anymore because their e-mail address
and/or phone number (one of which will be the primary User ID and either or
both are necessary for password resets) are no longer present in the
system. Support staff would already need access to the audit trail to see
if the victim's claim of account takeover is legitimate.

RELATED WEAKNESSES:

   Other CWE-620
   Other ES2307-3ffe7565
   Other ES2206-33c5627d

REFERENCES:

Title: I came across this waekness during a threat modeling assignment and could not find an existing CWE
URL: http://


ACTIVE ISSUES:


SUB.OVERLAP - "Duplicate/Overlap"

Description: The submission identifies a weakness, but it is a duplicate of
(or partially overlaps) existing weaknesses or other submissions,
indicating problems with the submission or associated CWE entries.

Resolution: The submission cannot progress to later phases until (1) the
duplicate/overlap is understood and (2) it is clear how to resolve this
duplicate/overlap.

Comments: This submission has partial overlap with two existing
submissions.  These submissions are "ES2206-33c5627d - Account
management with insufficient verification of owner's external
identifier(s)" (CDR #23) and "ES2307-3ffe7565 - Unverified Email
Change" (CDR #62).

These submissions both involve weaknesses around personal identifiers (such as emails and phone numbers).
ES2307-3ffe7565 discusses an application that does not use a form of authentication to verify
a user before allowing an email change.  This is also related to CWE-620: Unverified Password Change.
While there is overlap, the submission you provided is focused on there not being a notification
when a change of a personal identifier happens.  These are not the same weakness but closely related.
Please note if you agree that there is some overlap between these submissions.  We are noting the
overlap to track as we move all of these submissions along, but it will not prevent this submission
from moving forward in the process.

Response: I agree​ that all these weaknesses fall under the umbrella of
credential​ mismanagement​ and that some overlap exists.

To ensure a common understanding of the non-overlaps, I'll outline the
differences I see with both existing submissions:

My proposal ES2507-35bd5bc8 is different from ES2206-33c5627d in the
sense that abuse of that weakness happens when an attacker
pre-registers an account with an identifier of a user who is expected
to create an account later. In other words : this threat materializes
before a victim creates their account.

For ES2507-35bd5bc8 which is currently under review, the victim
created the account themselves, but post account-takeover (e.g.,
hijacking a user session, obtained the password, ...) falling prey to
this design weakness.

My proposal ​ES2507-35bd5bc8 is different from ES2307-3ffe7565​ as the
latter is a failure to comply with forcing re-authentication when
adding or adjusting sensitive data (SSH keys, bank account numbers,
etc), whereas CWE-620 is merely focused on reauthenticating upon a
password change.

For ES2507-35bd5bc8 which is currently under review, ​if the
prerequisite attack was of the form where attacker hijack​ed a user
session,​ the re-authN would stop them. If the prerequisite "attack"​
was a guessed or otherwise obtained password​, re-authentication does
not help.


----------

SUB.ABS.SUBTREE - "Potential subtree issue/gap"

Description: The submission might identify an issue for which there could
be a broader gap or organizational challenge that requires analysis of CWE
subtree relationships under Research View 1000, in ways that extend beyond
creation of a parent at the next-highest level of abstraction.

Resolution: The submission cannot progress past the consultation phase
(whether initial or detailed) unless it is at an acceptable level of
abstraction, and the subtree issue(s) can be resolved or addressed
independently.

Comments: Although the noted submissions above that have potential overlap
might fall under CWE-620, if this submission is treated as its own weakness,
there appears to be a gap in CWE related to lack of notifications.  This has
also been noted by you in the submission.  As the submission moves further along
in the process and the overlap between the existing submissions is better understood,
the CWE team may need to make other changes to account for this potential gap.
Please indicate if you agree that there is a potential gap in CWE.

Response: ​I understand and agree with the fact that a gap exists in
regards to notifying a victim of actions that are normally only
executed by themselves. The lack of this mechanism is precisely what
disenfranchises a user in acting upon an unexpected notification and
what I'm hoping to be able to convey with this submission as a
weakness to be safeguarded against.

----------

SUB.RELS - "Unclear relationships"

Description: The submission suggests some relationships, but the
name/description is not explained in a way in which the relationship is
relevant; or, the weakness is apparent, but it is not clear what the best
parent/child relationship(s) would be.

Resolution: The submission cannot progress to the next phase if SUB.UNCLEAR
is present. It can progress to other phases if the CWE Team agrees that the
potential relationships may require closer investigation.  The submission
cannot progress to the Publication stage until clear relationships and
direct parents are identified. The CWE Team may decide to use high-level
relationships (e.g., to Pillars) if deeper problems such as SUB.ABS.SUBTREE
exist and cannot be quickly resolved.

Comments: The current submission does not indicate any relationships due to
a perceived gap in CWE.  Because of this gap, it is possible there is no fitting
relationship at the moment and changes will need to be made to account for this.
We are also noting CWE-620 as a potential relationship due to it being alligned 
with the other two related submissions. Please let us know what you
think.  If you have indicated agreement with SUB.ABS.SUBTREE above,
then feel free to reference that response.

Response: I would say that "CWE-255 Credentials Management Errors"
would be a suitable parent for ES2507-35bd5bc8​, but unsure if you
agree that that would close the gap discussed above.


----------

SUB.RELREFS - "No relevant references"

Description: The submission does not provide relevant references that
explain the weakness, or the relevance is not easily found.

Resolution: The submission is not likely to progress to later phases if
there are no applicable, easily-accessible references. The submitter could
resolve by providing additional details such as a section name and quote
from the reference.  If no suitable references can be found, the CWE Team
may decide to make an exception.

Comments: Please include references for this submission which describe the
proposed weakness.  These will be included as supporting material and could also
provide the CWE team more insight while evaluating this submission. If you agree
with the references already mentioned in the ES2206-33c5627d and/or ES2307-3ffe7565
submissions, please let us know which references you believe are applicable.

Response: The references mentioned in ES2206-33c5627d are not really
applicable, because both describe how that attack happens before the
victim creates the account.

The references mentioned in ES2307-3ffe7565 have a few that touch upon
the subject:

Exploring Email Change Vulnerabilities and Security Best Practices -
https://www.vaadata.com/blog/exploring-email-change-vulnerabilities-and-security-best-practices/

This article mentions the issue in passing in the paragraph titled
"Validation on the old email address but not the new one (or on
both)", where it mentions that "This method is the most secure, as it
proves that the user has access to the old address and informs them of
the new one." It then goes on to discourage this because " .... users
generally want to change their email address because they no longer
have access to the old one.". I agree that this would be a reason not
to rely on access to the old mailbox for a legitimate address
change. In case of a clandestine address change, the user is likely to
still have access to the old inbox. The notification I'm proposing
also could be a mere "FYI" without blocking the legitimate use case of
"User no longer has access to the old mailbox and hence cannot
authorise abandoning it". In any event it should also mention that the
user should contact the support desk immediately if they did not
trigger this change.

The StackExchange article
https://security.stackexchange.com/questions/234060/what-is-the-suggested-best-practice-for-changing-a-users-email-address

It indeed touches upon the topic in "3. Confirmation through old
address". In response, the top-rated answer mentions the following :

Send a notice to the old email, for example: "Your email address for
accessing Website Example has been changed, if you didn't expect this
your account might have been compromised, etc." You might also provide
a link to recover the possibly compromised account, with a token that
expires after some time. The problem with this option is that if the
old account has been reassigned to someone else, you would not want to
let them know too much information (and definitely not give them a
direct recovery option)

This is precisely what OWASP also recommends in the next bullet point.

The OWASP article "Changing A User's Registered Email Address"
(https://owasp.org/www-community/pages/controls/Changing_Registered_Email_Address_For_An_Account)

This article mentions exactly the weakness described in the weakness
under review. The flowchart even suggests it in a node inside the
"Send emails" phase:

Email Currently-Registered email address

Notification-Only message

Include one link:
* Report the Change Request was Unexpected

The node to its right ("Email Currently-Registered email address /
Confirmation-Required message") triggers the issue that was pointed
out in the first reference I cited above. My proposal is basically to
indicate that a system design bypassing both these two nodes is
regarded a design weakness.

In client engagements where I have executed creation of threat models,
I have come across this specific weakness in real-world systems, yet I
am bound to professional non-disclosure of these clients and their
products.

If it helps, Josh Grossman at OWASP (https://github.com/tghosth) is
assessing including this proposed new CWE into the next release of the
recently published v5 OWASP ASVS (of which he is one of the core
project maintainers).

----------

RESOLVED ISSUES:



TIMELINE:

Received: 2025-07-18

Ack-Receipt: 2025-07-23

Init-Review: 2025-08-11

Init-Consultation: 2025-08-19

Init-Declined: YYYY-MM-DD

Init-Accepted: YYYY-MM-DD

Det-Requested: YYYY-MM-DD

Det-Received: YYYY-MM-DD

Det-Review: YYYY-MM-DD

Det-Consultation: YYYY-MM-DD

Det-Accepted: YYYY-MM-DD

Internal-Update: YYYY-MM-DD

CWE-Assigned: YYYY-MM-DD

CWE-Modified: YYYY-MM-DD

Final-Coord: YYYY-MM-DD

CWE-Published: YYYY-MM-DD

Post-Publication: YYYY-MM-DD

Closed: YYYY-MM-DD




COMMUNICATIONS LOG:
2025-07-23 sent email
2025-08-11 sent email
2025-08-19 sent email
2025-08-20 received comment
