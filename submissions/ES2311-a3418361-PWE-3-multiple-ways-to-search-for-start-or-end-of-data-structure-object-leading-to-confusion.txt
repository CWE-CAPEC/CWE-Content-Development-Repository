SUBMISSION COMMUNICATION ID: ES2311-a3418361

ACTION TYPE: New Entry

SUBMISSION STATUS: Init-Consultation

AFFECTED CWES: 

ORIGIN: sub-server

SUBMISSION DATE: 2023-11-14 23:38:10

ISSUES: yes/active

ISSUE DETAILS: SUB.UNCLEAR, SUB.ABS.LOWLEVEL, SUB.RELS

PUBTRACKER: #42

MTRACKER: #955

GITHUBUSER: dtlam01

SUBMISSION TYPE: Software

NAME: PWE-3: Multiple ways to search for start or end of data structure object leading to confusion

DESCRIPTION:

File formats specification often have identifying "magic" markers
to identify the file format or the start and end of the format. Polygot
files exist whenever different file formats can co-exist in the same file.
Depending on the parser, each will parse the start location differently for
each format. For example, a polygot file can contain both a PDF and ZIP at
the same time. Beside the initial entry point, this weakness can encompass
locating the start or end of data structures within the data format. A
malicious actor can manipulate the file by modifying data structures such
that a parser may become confused and parse from the wrong start or end
location. This can happen because the parser is being overly lenient,
confusing error handling, unclear specification, or badly defined search
functions.

RELATED WEAKNESSES:

   Other CWE-125
   Other CWE-427

REFERENCES:

Title: Parser Weakness Enumeration: Definition and Preliminary Assessment
URL: https://ieeexplore.ieee.org/document/10305625


ACTIVE ISSUES:


SUB.UNCLEAR - "Unclear weakness"

Description: The submission's name and/or description does not clearly
identify a weakness, or it is written in a way that is vague and could
cause the submission to be incorrectly mapped to.

Resolution: A submission cannot progress past the consultation phase until
SUB.UNCLEAR is addressed.

Comments: As written, the description doesn't clearly define what the weakness is
for the given submission.  The description describes how for polygot files, it could
be unclear where entrypoints are for particular data structures.  It is still unclear
if the weakness is in the data format or in the parser, because the description does not
specifically say what mistake the parsers are making.  There are indications that multiple
weaknesses may be involved; for example, if the parser is "confusing error handling"
then there are CWEs for that; if there's an "unclear specification" then there
may be a CWE for that. It is not clear what mistakes contribute to
a "badly defined search function". Finally, what mistakes might cause the parser to
be "overly lenient" ? Please provide additional language that specifically describes the
weakness.

Response: The weakness is unclear or open-ended specification for how
to validate the data format. The ambiguous description may indicate a
marker or method as a way to find the start and end of the data
format. However, due to ambiguity, parser developers has to infer how
complete or strict they need to be in order to validate the data
format. The weakness in the unclear specification has the effect of
causing a weakness in the parser. For example, a PDF parser identifies
the unique PDF marker in the header, but there is ambiguity in how to
find the next table of content (TOC) marker. One parser developer may
scan from the beginning, while another developer may start scanning
from the end. If the specification allows for multiple TOC, a "badly
defined search function" in this case could be the developer who
scanned from the end. Polygot files are an example of "overly lenient"
parser's assumption that when a magic marker is found the rest of the
file is legit, without doing any further validation.


----------

SUB.ABS.LOWLEVEL - "Low level of abstraction"

Description: The submission identifies an issue, but its abstraction might
be too low-level to merit its own CWE entry. If it is focused on a
particular technology, framework, protocol, or function, then it might not
be unique enough to get its own CWE ID.  This might lead to modification of
an existing entry to include the additional details, or creation of a
higher-level entry for which the submission is one example. (Note: some
older CWE entries have this problem and would not be published today,
generally because they were too specific to a particular language.)

Resolution: The submission will be allowed to progress to later phases once
the more-general concept is appropriately identified and described. The
original, lower-level submission will serve as a primary example of the
more general concept.

Comments: The submission appears to focus on polygot files, which could
potentially be too low level to warrant an entire CWE entry.  Since the 
actual weakness is unclear, it's still uncertain if the weakness applies to
a broader set of technologies or file types.  Similarly to other PWE submissions,
we would like to apply the weaknesses to a broader set of technologies than just
parsers if possible.  When providing an updated description, please also keep in mind
how the language could fit to broader applicable cases.

Response: The more general concept is ambiguous or incomplete
specification on how to correctly validate the specification for a
data format, this may include an description on how to handle error
recovery or partial correctness if allowed. A magic marker or
identifier is usually provided but should never be enough for
validation of the start or end of the data format.

----------

SUB.RELS - "Unclear relationships"

Description: The submission suggests some relationships, but the
name/description is not explained in a way in which the relationship is
relevant; or, the weakness is apparent, but it is not clear what the best
parent/child relationship(s) would be.

Resolution: The submission cannot progress to the next phase if SUB.UNCLEAR
is present. It can progress to other phases if the CWE Team agrees that the
potential relationships may require closer investigation.  The submission
cannot progress to the Publication stage until clear relationships and
direct parents are identified. The CWE Team may decide to use high-level
relationships (e.g., to Pillars) if deeper problems such as SUB.ABS.SUBTREE
exist and cannot be quickly resolved.

Comments: The current submitted relationships do not seem to apply.  Firstly,
CWE-427: "Uncontrolled Search Path Element" is unrelated because it is discussing
the access of resources within a file system, not searching through individual files.
CWE-125: "Out-of-bounds Read" also does not seem to apply based on the current understanding
of the submission, although further clarification of the weakness may identify that this relationship
could be applicable as a "CanPrecede" relationship - that is, this parser weakness(es)
could lead to an out-of-bounds read.  Once the weakness becomes more clear it will
be easier to identify potential relationships within the CWE tree.

Response: CWE-1287: Improper Validation of Specified Type of Input
appears to be related, but it does not appear to capture that due to
ambiguous or unclear data format specification, parser developers are
left with multiple ways to validate the input. The format
specification has to be clearer for developers to parse what is proper
compliance for the expected type.



RESOLVED ISSUES:



TIMELINE:

Received: 2023-11-14

Ack-Receipt: 2023-12-28

Init-Review: 2025-04-08

Init-Consultation: 2025-07-17

Init-Declined: YYYY-MM-DD

Init-Accepted: YYYY-MM-DD

Det-Requested: YYYY-MM-DD

Det-Received: YYYY-MM-DD

Det-Review: YYYY-MM-DD

Det-Consultation: YYYY-MM-DD

Det-Accepted: YYYY-MM-DD

Internal-Update: YYYY-MM-DD

Final-Coord: YYYY-MM-DD

CWE-Assigned: YYYY-MM-DD

CWE-Modified: YYYY-MM-DD

CWE-Published: YYYY-MM-DD

Post-Publication: YYYY-MM-DD

Closed: YYYY-MM-DD




COMMUNICATIONS LOG:
2023-12-28 sent email
2025-04-08 sent email
2025-07-17 sent email
2025-07-27 received email
